// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  name       String
  image      String?
  password   String
  salt       String
  membership Member[]
  projects   Project[]
}

model Project {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  owner    User      @relation(fields: [ownerId], references: [id])
  ownerId  String    @db.ObjectId
  members  Member[]
  sections Section[]
}

model Member {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
  tasks     Task2Member[]
}

model Section {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
  name      String
  position  Int
  tasks     Task[]
}

model Task {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  section     Section     @relation(fields: [sectionId], references: [id])
  sectionId   String      @db.ObjectId
  name        String
  position    Int
  assignees   Task2Member[]
  description String?
  dueDate     DateTime?
  isCompleted Boolean     @default(false)
}

model Task2Member {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  member   Member @relation(fields: [memberId], references: [id])
  memberId String @db.ObjectId
  task     Task   @relation(fields: [taskId], references: [id])
  taskId   String @db.ObjectId
}
